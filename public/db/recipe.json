{
    "recipe" : [
        {
            "title": "React",
            "detail": "컴포넌트를 사용해 재사용 가능한 UI를 만들고 독립적으로 개발했습니다. JSX 문법을 통해 편리하게 작업했고, 방대한 커뮤니티를 통해 자료를 쉽게 찾을 수 있었습니다."
        },
        {
            "title": "TypeScript",
            "detail": "함수나 객체에 들어가는 구조에 타입을 정의하여 코드 작성 시 발생할 수 있는 오류를 미리 방지할 수 있습니다."
        },
        {
            "title": "CSS",
            "detail": "module css를 사용해서 각 컴포넌트 별 독립적인 스타일을 적용해서 스타일 충돌을 방지했습니다. "
        },
        {
            "title": "React-Router-Dom",
            "detail": "SPA 프로젝트에서 routing을 구현하는 데 사용했습니다. 깜빡임 없이 페이지 이동을 구현했고, 동적 경로 매칭과 중첩된 라우트를 통해 복잡한 애플리케이션을 유연하게 관리했습니다."
        },
        {
            "title": "Context API",
            "detail": "전역 상태를 효육적으로 관리했습니다. 사용자 정보, 데이터 등 여러 컴포넌트에서 공통으로 사용하는 데이터를 쉽게 공유할 수 있도록 했습니다."
        },
        {
            "title": "Vite",
            "detail": "Vite를 사용하여 React 프로젝트 초기 설정을 간소화했습니다."
        },
        {
            "title": "Firebase",
            "detail": "Firebase를 활용해서 이메일 기반 회원가입과 Firestore를 사용해서 유저 정보 및 레시피 데이터를 저장하고 실시간으로 데이터를 불러오는 기능을 구현했습니다."
        },
        {
            "title": "Vercel",
            "detail": "Next.js를 만든 배포 플랫폼으로 빌드, 배포, 호스팅 서비스를 무료로 제공합니다. GitHub와 연동되어 쉽게 배포를 할 수 있습니다."
        },
        {
            "title": "Github",
            "detail": "GitHub를 통해 프로젝트 레포지토리를 관리하고, Pull Request(PR) 기능을 활용하여 코드 리뷰와 협업을 진행했습니다."
        }
    ]
}